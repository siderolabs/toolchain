name: toolchain
install:
  - bison
  - build-base
  - bzip2
  - coreutils
  - curl
  - diffutils
  - findutils
  - gawk
  - grep
  - gzip
  - patch
  - perl
  - tar
  - texinfo
  - xz
finalize:
  - from: /toolchain
    to: /toolchain
steps:
  - prepare: |
      mkdir -p ${SYSROOT}${TOOLCHAIN}
      if [[ ! -L ${TOOLCHAIN} ]]; then
          ln -sv ${SYSROOT}${TOOLCHAIN} ${TOOLCHAIN}
      fi

  # binutils-stage-1

  - sources:
      - url: https://ftp.gnu.org/gnu/binutils/binutils-2.31.1.tar.xz
        destination: binutils.tar.xz
        sha256: 5d20086ecf5752cc7d9134246e9588fa201740d540f7eb84d795b1f7a93bca86
        sha512: 0fca326feb1d5f5fe505a827b20237fe3ec9c13eaf7ec7e35847fd71184f605ba1cefe1314b1b8f8a29c0aa9d88162849ee1c1a3e70c2f7407d88339b17edb30

    prepare: |
      tar -xJf binutils.tar.xz --strip-components=1
      mkdir build
      cd build
      ../configure \
      --build=${BUILD} \
      --host=${HOST} \
      --target=${TARGET} \
      --prefix=${TOOLCHAIN}/cross \
      --with-sysroot=${SYSROOT} \
      --with-lib-path=${TOOLCHAIN}/lib \
      --disable-nls \
      --disable-werror

    build: |
      cd build
      make -j $(nproc)

    install: |
      cd build
      make install

  # gcc-stage-1

  - sources:
      - url: https://ftp.gnu.org/gnu/gcc/gcc-8.3.0/gcc-8.3.0.tar.xz
        destination: gcc.tar.xz
        sha256: 64baadfe6cc0f4947a84cb12d7f0dfaf45bb58b7e92461639596c21e02d97d2c
        sha512: 1811337ae3add9680cec64968a2509d085b6dc5b6783fc1e8c295e3e47416196fd1a3ad8dfe7e10be2276b4f62c357659ce2902f239f60a8648548231b4b5802
      - url: https://ftp.gnu.org/gnu/mpfr/mpfr-4.0.2.tar.xz
        destination: mpfr.tar.xz
        sha256: 1d3be708604eae0e42d578ba93b390c2a145f17743a744d8f3f8c2ad5855a38a
        sha512: d583555d08863bf36c89b289ae26bae353d9a31f08ee3894520992d2c26e5683c4c9c193d7ad139632f71c0a476d85ea76182702a98bf08dde7b6f65a54f8b88
      - url: https://ftp.gnu.org/gnu/gmp/gmp-6.1.2.tar.xz
        destination: gmp.tar.xz
        sha256: 87b565e89a9a684fe4ebeeddb8399dce2599f9c9049854ca8c0dfbdea0e21912
        sha512: 9f098281c0593b76ee174b722936952671fab1dae353ce3ed436a31fe2bc9d542eca752353f6645b7077c1f395ab4fdd355c58e08e2a801368f1375690eee2c6
      - url: https://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz
        destination: mpc.tar.gz
        sha256: 6985c538143c1208dcb1ac42cedad6ff52e267b47e5f970183a3e75125b43c2e
        sha512: 72d657958b07c7812dc9c7cbae093118ce0e454c68a585bfb0e2fa559f1bf7c5f49b93906f580ab3f1073e5b595d23c6494d4d76b765d16dde857a18dd239628

    prepare: |
      mkdir mpfr
      tar -xJf mpfr.tar.xz --strip-components=1 -C mpfr

      mkdir gmp
      tar -xJf gmp.tar.xz --strip-components=1 -C gmp

      mkdir mpc
      tar -xzf mpc.tar.gz --strip-components=1 -C mpc

      tar -xJf gcc.tar.xz --strip-components=1
      mkdir build
      cd build

      for file in ../gcc/config/{aarch64/aarch64-linux,arm/{linux-eabi,linux-elf},linux,i386/linux{,64}}.h; do
          cp -uv $file{,.orig}
          sed -e "s@/lib\(64\)\?\(32\)\?/ld@${TOOLCHAIN}&@g" \
          -e "s@/usr@${TOOLCHAIN}@g" $file.orig > $file
          cat >> $file <<EOF
      #undef STANDARD_STARTFILE_PREFIX_1
      #undef STANDARD_STARTFILE_PREFIX_2
      #define STANDARD_STARTFILE_PREFIX_1 "${TOOLCHAIN}/lib/"
      #define STANDARD_STARTFILE_PREFIX_2 ""
      EOF
          touch $file.orig
      done

      sed -e '/m64=/s/lib64/lib/' -i.orig ../gcc/config/i386/t-linux64
      sed -e '/mabi.lp64=/s/lib64/lib/' -i.orig ../gcc/config/aarch64/t-aarch64-linux

      ../configure \
      --build=${BUILD} \
      --host=${HOST} \
      --target=${TARGET} \
      --prefix=${TOOLCHAIN}/cross \
      --with-sysroot=${SYSROOT} \
      --with-local-prefix=${TOOLCHAIN} \
      --with-native-system-header-dir=${TOOLCHAIN}/include \
      --with-newlib \
      --without-headers \
      --disable-nls \
      --disable-shared \
      --disable-multilib \
      --disable-threads \
      --disable-libatomic \
      --disable-libgomp \
      --disable-libmpx \
      --disable-libquadmath \
      --disable-libssp \
      --disable-libvtv \
      --disable-libstdcxx \
      --disable-libcilkrts \
      --disable-libstdcxx-pch \
      --disable-symvers \
      --disable-libitm \
      --disable-gnu-indirect-function \
      --disable-libmudflap \
      --disable-libsanitizer \
      --enable-languages=c,c++

    build: |
      cd build
      make -j $(nproc)

    install: |
      cd build
      make install-strip

  # linux-headers

  - sources:
      - url: https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.19.40.tar.xz
        destination: linux.tar.xz
        sha256: 6fd8cd4d8a15d7bfb4a7968fbe104f97f8c5ff557c752aae43fe13a6ca073fb0
        sha512: b9f2bfd8366c7c8315ff27beffcc8e6c0b2c1a92ebc344af8eecfccec63c0fcf8243abc27a1c6297deac0ad69ab9d4ddfb312c9b58c567ff6755b487d8b13c28

    build: |
      tar -xJf linux.tar.xz --strip-components=1

      arch=""

      case $ARCH in
          x86_64)
              arch="x86_64"
          ;;
          aarch64)
              arch="arm64"
          ;;
          armv7)
              arch="arm"
          ;;
          *)
              echo "unsupported arch ${ARCH}"
              exit 1
          ;;
      esac

      make -j $(nproc) INSTALL_HDR_PATH=dest headers_install ARCH=${arch}

    install: |
      mkdir -p ${TOOLCHAIN}/include
      cp -rv dest/include/* ${TOOLCHAIN}/include

  # musl

  - sources:
      - url: https://www.musl-libc.org/releases/musl-1.1.22.tar.gz
        destination: musl.tar.gz
        sha256: 8b0941a48d2f980fd7036cfbd24aa1d414f03d9a0652ecbd5ec5c7ff1bee29e3
        sha512: 08a40d722672504427238e71c9e52a723c6a14735abe9581d6d4bb3f86662d5d51a3f32a6aed6420c1f9680e22a3a554a9b87ae342635be971e2db49cc9fdb87

    prepare: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}

      tar -xzf musl.tar.gz --strip-components=1

      mkdir build
      cd build

      ../configure \
      --prefix=${TOOLCHAIN} \
      --syslibdir=${TOOLCHAIN}/lib \
      CROSS_COMPILE=${TARGET}-

    build: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}

      cd build
      make -j $(nproc)

    install: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      cd build
      make install

    test: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      echo 'int main(){}' > dummy.c
      ${TARGET}-gcc dummy.c
      readelf -l a.out | grep ": ${TOOLCHAIN}"

  # libstdc++

  - sources:
      - url: https://ftp.gnu.org/gnu/gcc/gcc-8.3.0/gcc-8.3.0.tar.xz
        destination: gcc.tar.xz
        sha256: 64baadfe6cc0f4947a84cb12d7f0dfaf45bb58b7e92461639596c21e02d97d2c
        sha512: 1811337ae3add9680cec64968a2509d085b6dc5b6783fc1e8c295e3e47416196fd1a3ad8dfe7e10be2276b4f62c357659ce2902f239f60a8648548231b4b5802

    prepare: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}

      tar -xJf gcc.tar.xz --strip-components=1

      mkdir build
      cd build

      export CC="${TARGET}-gcc"
      export CXX="${TARGET}-g++"
      export AR="${TARGET}-ar"
      export AS="${TARGET}-as"
      export RANLIB="${TARGET}-ranlib"
      export LD="${TARGET}-ld"
      export STRIP="${TARGET}-strip"

      ../libstdc++-v3/configure \
      --host=${TARGET} \
      --prefix=${TOOLCHAIN} \
      --with-gxx-include-dir=${TOOLCHAIN}/cross/${TARGET}/include/c++/8.3.0 \
      --disable-multilib \
      --disable-nls \
      --disable-libstdcxx-threads \
      --disable-libstdcxx-pch

    build: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      cd build
      make -j $(nproc)

    install: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      cd build
      make install

  # binutils-stage-2

  - sources:
      - url: https://ftp.gnu.org/gnu/binutils/binutils-2.31.1.tar.xz
        destination: binutils.tar.xz
        sha256: 5d20086ecf5752cc7d9134246e9588fa201740d540f7eb84d795b1f7a93bca86
        sha512: 0fca326feb1d5f5fe505a827b20237fe3ec9c13eaf7ec7e35847fd71184f605ba1cefe1314b1b8f8a29c0aa9d88162849ee1c1a3e70c2f7407d88339b17edb30

    prepare: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      tar -xJf binutils.tar.xz --strip-components=1

      mkdir build
      cd build

      export CC="${TARGET}-gcc"
      export CXX="${TARGET}-g++"
      export AR="${TARGET}-ar"
      export AS="${TARGET}-as"
      export RANLIB="${TARGET}-ranlib"
      export LD="${TARGET}-ld"
      export STRIP="${TARGET}-strip"

      ../configure \
      --build=${BUILD} \
      --host=${HOST} \
      --prefix=${TOOLCHAIN} \
      --with-sysroot \
      --with-lib-path=${TOOLCHAIN}/lib \
      --disable-nls \
      --disable-werror

    build: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}

      export CC="${TARGET}-gcc"
      export CXX="${TARGET}-g++"
      export AR="${TARGET}-ar"
      export AS="${TARGET}-as"
      export RANLIB="${TARGET}-ranlib"
      export LD="${TARGET}-ld"
      export STRIP="${TARGET}-strip"

      cd build
      make -j $(nproc)

    install: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      cd build
      make install
      make -C ld clean
      make -C ld LIB_PATH=/lib
      cp -v ld/ld-new ${TOOLCHAIN}/bin

  # gcc-stage-2

  - sources:
      - url: https://ftp.gnu.org/gnu/gcc/gcc-8.3.0/gcc-8.3.0.tar.xz
        destination: gcc.tar.xz
        sha256: 64baadfe6cc0f4947a84cb12d7f0dfaf45bb58b7e92461639596c21e02d97d2c
        sha512: 1811337ae3add9680cec64968a2509d085b6dc5b6783fc1e8c295e3e47416196fd1a3ad8dfe7e10be2276b4f62c357659ce2902f239f60a8648548231b4b5802
      - url: https://ftp.gnu.org/gnu/mpfr/mpfr-4.0.2.tar.xz
        destination: mpfr.tar.xz
        sha256: 1d3be708604eae0e42d578ba93b390c2a145f17743a744d8f3f8c2ad5855a38a
        sha512: d583555d08863bf36c89b289ae26bae353d9a31f08ee3894520992d2c26e5683c4c9c193d7ad139632f71c0a476d85ea76182702a98bf08dde7b6f65a54f8b88
      - url: https://ftp.gnu.org/gnu/gmp/gmp-6.1.2.tar.xz
        destination: gmp.tar.xz
        sha256: 87b565e89a9a684fe4ebeeddb8399dce2599f9c9049854ca8c0dfbdea0e21912
        sha512: 9f098281c0593b76ee174b722936952671fab1dae353ce3ed436a31fe2bc9d542eca752353f6645b7077c1f395ab4fdd355c58e08e2a801368f1375690eee2c6
      - url: https://ftp.gnu.org/gnu/mpc/mpc-1.1.0.tar.gz
        destination: mpc.tar.gz
        sha256: 6985c538143c1208dcb1ac42cedad6ff52e267b47e5f970183a3e75125b43c2e
        sha512: 72d657958b07c7812dc9c7cbae093118ce0e454c68a585bfb0e2fa559f1bf7c5f49b93906f580ab3f1073e5b595d23c6494d4d76b765d16dde857a18dd239628

    prepare: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}

      mkdir mpfr
      tar -xJf mpfr.tar.xz --strip-components=1 -C mpfr

      mkdir gmp
      tar -xJf gmp.tar.xz --strip-components=1 -C gmp

      mkdir mpc
      tar -xzf mpc.tar.gz --strip-components=1 -C mpc

      tar -xJf gcc.tar.xz --strip-components=1
      mkdir build
      cd build

      cat ../gcc/limitx.h ../gcc/glimits.h ../gcc/limity.h > `dirname $(${TARGET}-gcc -print-libgcc-file-name)`/include-fixed/limits.h

      for file in ../gcc/config/{aarch64/aarch64-linux,arm/{linux-eabi,linux-elf},linux,i386/linux{,64}}.h; do
          cp -uv $file{,.orig}
          sed -e "s@/lib\(64\)\?\(32\)\?/ld@${TOOLCHAIN}&@g" \
          -e "s@/usr@${TOOLCHAIN}@g" $file.orig > $file
          cat >> $file <<EOF
      #undef STANDARD_STARTFILE_PREFIX_1
      #undef STANDARD_STARTFILE_PREFIX_2
      #define STANDARD_STARTFILE_PREFIX_1 "${TOOLCHAIN}/lib/"
      #define STANDARD_STARTFILE_PREFIX_2 ""
      EOF
          touch $file.orig
      done

      sed -e '/m64=/s/lib64/lib/' -i.orig ../gcc/config/i386/t-linux64
      sed -e '/mabi.lp64=/s/lib64/lib/' -i.orig ../gcc/config/aarch64/t-aarch64-linux

      export CC="${TARGET}-gcc"
      export CXX="${TARGET}-g++"
      export AR="${TARGET}-ar"
      export AS="${TARGET}-as"
      export RANLIB="${TARGET}-ranlib"
      export LD="${TARGET}-ld"
      export STRIP="${TARGET}-strip"

      ../configure \
      --build=${BUILD} \
      --host=${HOST} \
      --prefix=${TOOLCHAIN} \
      --with-local-prefix=${TOOLCHAIN} \
      --with-native-system-header-dir=${TOOLCHAIN}/include \
      --disable-multilib \
      --disable-nls \
      --enable-shared \
      --enable-languages=c,c++ \
      --enable-__cxa_atexit \
      --enable-c99 \
      --enable-long-long \
      --enable-threads=posix \
      --enable-clocale=generic \
      --enable-libstdcxx-time \
      --enable-checking=release \
      --enable-fully-dynamic-string \
      --disable-symvers \
      --disable-gnu-indirect-function \
      --disable-libmudflap \
      --disable-libsanitizer \
      --disable-libmpx \
      --disable-lto-plugin \
      --disable-libssp \
      --disable-bootstrap

    build: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}

      export CC="${TARGET}-gcc"
      export CXX="${TARGET}-g++"
      export AR="${TARGET}-ar"
      export AS="${TARGET}-as"
      export RANLIB="${TARGET}-ranlib"
      export LD="${TARGET}-ld"
      export STRIP="${TARGET}-strip"

      cd build
      make -j $(nproc)

    install: |
      export PATH=${TOOLCHAIN}/cross/bin:${PATH}
      cd build
      make install-strip
      ln -sv gcc ${TOOLCHAIN}/bin/cc

    test: |
      rm -rf ${TOOLCHAIN}/cross
      echo 'int main(){}' > dummy.c
      cc dummy.c
      readelf -l a.out | grep ": ${TOOLCHAIN}"
